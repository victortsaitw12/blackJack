version: "2"
services:
  zookeeper:
    image: confluent/zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    command: [start-kafka.sh]
    ports:
      - "9092:9092"
    links:
      - zookeeper:zk
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 10
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  kafka-manager:
    image: sheepkiller/kafka-manager:latest
    ports:
      - "9000:9000"
    links:
      - zookeeper
      - kafka
    environment:
      ZK_HOSTS: zookeeper:2181
      APPLICATION_SECRET: letmein
      KM_ARGS: -Djava.net.preferIPv4Stack=true

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ELASTIC_USERNAME: 'elastic'
      ELASTIC_PASSWORD: '123'
      DISCOVERY_TYPE: 'single-node'

  kibana:
    image: docker.elastic.co/kibana/kibana:6.2.4
    volumes:
      - "./elk/kibana.yml:/usr/share/kibana/config/kibana.yml"
    ports:
      - "5601:5601"
    links:
      - elasticsearch
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:6.2.4
    volumes:
      - "./elk/logstash.conf:/config-dir/logstash.conf"
    command: logstash -f /config-dir/logstash.conf
    ports:
      - "9600:9600"
      - "7777:7777"
    links:
      - elasticsearch
      - kafka

  mongo:
    image: mongo:3.2
    ports:
      - "27017"

  redis:
    image: redis:alpine
    ports:
      - "6379"

  nginx:
    build: ./nginx-docker
    ports:
      - "8080:80"

  web1:
    build: ./web
    command: nodemon index.js
    volumes:
      - ./web:/app
    depends_on:
      - nginx
      - redis
    ports:
      - "8081:8081"
    environment:
      PORT: 8081
      DBA_POOL: 'dbaPool'
      BLJ_QUEUE: 'blj'
      BLJ_KEY: 'blj_key'
      BIND_QUEUE: 'web1'
      BIND_POOL: 'webPool'
      BIND_KEY: 'web1_key'

  web2:
    build: ./web
    command: nodemon index.js
    volumes:
      - ./web:/app
    depends_on:
      - nginx
      - redis
    ports:
      - "8082:8082"
    environment:
      PORT: 8082
      DBA_POOL: 'dbaPool'
      BLJ_QUEUE: 'blj'
      BLJ_KEY: 'blj_key'
      BIND_QUEUE: 'web2'
      BIND_POOL: 'webPool'
      BIND_KEY: 'web2_key'

  dba:
    build: ./dba
    command: nodemon index.js
    volumes:
      - ./dba:/app
    depends_on:
      - mongo
      - redis
      - kafka
    environment:
      KAFKA_TOPIC: "kafka-dba-topic"
      BIND_QUEUE: 'dbaQueue'
      BIND_POOL: 'dbaPool'
      BIND_KEY: ''

  blj:
    build: ./blj
    command: nodemon index.js
    volumes:
      - ./blj:/app
    depends_on:
      - mongo
      - redis
      - kafka
    environment:
      DBA_POOL: 'dbaPool'
      BIND_QUEUE: 'blj'
      BIND_POOL: ''
      BIND_KEY: 'blj_key'
